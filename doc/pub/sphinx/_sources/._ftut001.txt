.. !split

To-do list
==========

Remember: cannot exceed 150 pages (as reported at the end of ``ftut.log``).
Solutions to exercises will not appear in the printed book. If we run
out of pages, we can also remove the exercises by putting if-else
constructs around them. There will be one short printed tutorial and
then extended e-versions with exercises (and optionally solution) on our
github web site.

Regarding layout, we must use ``svmono.cls`` for the printed book, but
are allowed to use gray background in code boxes and lmodern instead
of Courier for monospace font. Springer's official ebook has exactly
the same layout. For all other versions on our github
web site, we can choose whatever layout we want.

 * Reorganize sections into chapters. (HPL)

 * Rethink how to organize example programs in directories.
   Find a naming convention. (AL)
   HPL suggestion: Drop the ``stationary`` and ``transient`` directories,
   have at most separate directories for each PDE.

 * Programs are now flat demos. Educate the reader with
   better software engineering habits: functions, classes, unit tests.
   Avoid copy-and-edit flat programs implied by today's collection. (HPL)

 * Compute maximum error already in the first example so we can create
   a unit test as early as possible. (Done, HPL)

 * Find successful exercises from various tutorials (AL) and add as
   exercises in the book (HPL/AL). Exercises are key for learning
   software so having them (in an extended version?) sends an important
   signal about their relevance.

 * Write about installation in a way that does not get outdated.
   More as a guide to a newcomer: What to choose? (AL)

 * Multi-boundary examples do not work with FEniCS 1.6: ``dnr*.py``. (AL)

 * ``membrane2.py`` referred to, but it is still in sandbox. (HPL)

 * Meshr domains. Set up some common continuum mechanics examples first. (HPL/AL)

 * Decide on an elasticity problem.

 * Simple Navier-Stokes solver. Do backward facing step and flow around a
   cylinder.

