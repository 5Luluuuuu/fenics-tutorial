# Stand-alone notebook?
# #if FORMAT == "ipynb"
# #include "mako_code.txt"
# #endif

======= The equations of linear elasticity =======
label{ftut:elast}

Analysis of structures is one of the major activities in modern
engineering, thus making the PDEs for deformation of elastic bodies
likely the most popular PDE model in the world.
It takes just one page of code to solve the equations of 2D or 3D
elasticity in FEniCS, and the details follows below.

===== PDE problem =====

The equations governing small elastic deformations of a body $\Omega$
can be written as

!bt
\begin{align}
-\nabla\cdot\sigma &= f\hbox{ in }\Omega,
label{ftut:elast:varform:equilibrium}\\
\sigma &= \lambda\,\hbox{tr}\,\varepsilon I + 2\mu\varepsilon,
label{ftut:elast:varform:stresstrain}\\
\varepsilon &= \frac{1}{2}\left(\nabla u + (\nabla u)^{\top}\right),
label{ftut:elast:varform:strainu}
\end{align}
!et
where $\sigma$ is the stress tensor, $f$ is the body force per unit
volume, $\lambda$ and $\mu$ are Lame's elasticity parameters for the
material in $\Omega$, $I$ is the identity tensor, $\mathrm{tr}$ is the
trace operator on a tensor, $\varepsilon$ is the strain tensor
(symmetric gradient), and $u$ is the displacement vector field.

We combine (ref{ftut:elast:varform:stresstrain}) and
(ref{ftut:elast:varform:strainu}) to obtain

!bt
\begin{equation}
\sigma = \lambda(\nabla\cdot u)I + \mu(\nabla u + (\nabla u)^{\top})\tp
label{ftut:elast:varform:stressu}
\end{equation}
!et
Note that (ref{ftut:elast:varform:equilibrium})-(ref{ftut:elast:varform:strainu})
can easily be transformed to a single vector PDE for $u$, which is the governing
PDE for the unknown $u$. In the derivation of the variational formulation,
however, the splitting of the equations as above is convenient.

===== Variational formulation =====
label{ftut:elast:varform}

The variational formulation of
(ref{ftut:elast:varform:equilibrium})--(ref{ftut:elast:varform:strainu})
consists of forming the inner product of
(ref{ftut:elast:varform:equilibrium}) and a *vector* test function
$v\in \hat{V}$, where $\hat{V}$ is a test vector function space, and
integrating over the domain $\Omega$:

!bt
\[ -\int_\Omega (\nabla\cdot\sigma) \cdot v \dx =
\int_\Omega f\cdot v\dx\tp\]
!et
Since $\nabla\cdot\sigma$ contains second-order derivatives of the primary
unknown $u$, we integrate this term by parts:

!bt
\[ -\int_\Omega (\nabla\cdot\sigma) \cdot v \dx
= \int_\Omega \sigma : \nabla v\dx - \int_{\partial\Omega}
(\sigma\cdot n)\cdot v \ds,\]
!et
where the colon operator is the inner product between tensors
(summed pairwise product of all elements), and $n$
is the outward unit normal at the boundary. The quantity $\sigma\cdot n$
is known as the *traction* or stress vector at the boundary, and is often
prescribed as a boundary condition. We assume that it is prescribed
at a part $\partial\Omega_T$ of the boundary and set $T = \sigma\cdot
n$. On the remaining part of the boundary, we assume that the value of
the displacement is given as a Dirichlet condition.
We then have

!bt
\[
\int_\Omega \sigma : \nabla v \dx =
\int_\Omega f\cdot v \dx
+ \int_{\partial\Omega_T} T\cdot v\ds\tp\]
!et
Inserting (ref{ftut:elast:varform:stressu}) for $\sigma$ gives the
variational form with $u$ as unknown. Note that the boundary integral
on the remaining part $\partial\Omega\setminus\Omega_T$ vanishes due
to the Dirichlet condition ($v = 0$).

We can now summarize the variational formulation as: find $u\in V$ such that

!bt
\begin{equation}
a(u,v) = L(v)\quad\forall v\in\hat{V},
\end{equation}
!et
where

!bt
\begin{align}
a(u,v) &= \int_\Omega\sigma(u) :\nabla v \dx,\\
\sigma(u) &= \lambda(\nabla\cdot u)I + \mu(\nabla u + (\nabla u)^{\top}),\\
L(v) &= \int_\Omega f\cdot v\dx + \int_{\partial\Omega_T}
T\cdot v\ds\tp
\end{align}
!et

One can show that the inner product of a symmetric tensor $A$ and a
non-symmetric tensor $B$ vanishes. If we express $\nabla v$ as a sum
of its symmetric and non-symmetric parts, only the symmetric part will
survive in the product $\sigma :\nabla v$ since $\sigma$ is a
symmetric tensor. Thus replacing $\nabla u$ by the symmetric gradient
$\epsilon(u)$ gives rise to the slightly different
variational form

!bt
\begin{equation}
a(u,v) = \int_\Omega\sigma(u) :\varepsilon(v) \dx,
\end{equation}
!et
where $\varepsilon(v)$ is the symmetric part of $\nabla v$:

!bt
\[ \varepsilon(v) = \frac{1}{2}\left(\nabla v + (\nabla v)^{\top}\right)\tp\]
!et

===== A simple implementation =====

=== Test problem ===

As a test example, we may look at a clamped beam deformed under its
own weight. Then $f=(0,0,-\varrho g)$ is the body force with $\varrho$ the
density of the beam and $g$ the acceleration of gravity. The beam is
box-shaped with length $L$ and square cross section of width $W$. We
set $u=(0,0,0)$ at the clamped end, $x=0$. The rest of the boundary is
traction free; that is, we set $T = 0$.

Let us scale the problem. [hpl: This was meant to simplify the problem
so we don't need values for $\lambda$, $\mu$, etc for a
specific material, but the scaling requires some care.]
In the equation for $u$, arising from inserting
(ref{ftut:elast:varform:stresstrain}) and
(ref{ftut:elast:varform:strainu}) in
(ref{ftut:elast:varform:equilibrium}),

!bt
\[ \nabla\cdot(\lambda\nabla\cdot u) + \mu\nabla^2 u = f,\]
!et
we insert coordinates made dimensionless by $L$, and $\bar u=u/U$,
which results in the dimensionless governing equation

!bt
\[
\bar\nabla\cdot(\bar\nabla\cdot \bar u) + \beta\bar\nabla^2 \bar u =
\bar f,\quad \bar f = (0,0,\gamma),\]
!et
where $\beta = \mu/\lambda$ is a dimensionless elasticity parameter and

!bt
\[ \gamma = \frac{\varrho gL^2}{U\lambda}\tp\]
!et

[AL: Need to change above scaling argument now that $\varrho$ is not
part of the equation?]

[AL: $W$ not defined below. Width?]

Sometimes, one will argue to chose $U$ to make $\gamma$ unity ($U
= \varrho gL^2/\lambda$). However, in elasticity, this leads us
to displacements of the size of the geometry, which makes plot look
very strange. We therefore want the characteristic displacement to be a
small fraction of the characteristic length of the geometry.
Actually, for a clamped beam, one has a deflection formula which gives
$U = \frac{3}{2}\varrho gL^2\delta^2/E$, where $\delta = L/W$.
Thus, the dimensionless parameter $\delta$ is very important in the
problem (as expected: $\delta\gg 1$ is what gives beam theory).
Taking $E$ to be of the same order as $\lambda$, we realize that
$\gamma \sim \delta^{-2}$.  Experiments with the code point to $\gamma
= 0.25\delta^{-2}$ as an appropriate choice.  We implement the code
with physical parameters, $\lambda$, $\mu$, $\varrho$, $g$, $L$, and
$W$, but set these to achieve the solution of the scaled problem:
$\lambda = \varrho = L = 1$, $W$ as $W/L$, $g=\gamma$, and
$\mu=\beta$.

[AL: I find this somewhat confusing. First we talk about a rescaled
equation but then we solve the unscaled equation, but we choose the
parameters so that it is somehow related to the scaled problem...?]

[AL: Need to look at code again once I have understood the scaling.]

=== FEniCS implementation ===

[hpl: Must explain the code. New concepts here, though not many.]

@@@CODE src/elasticity_flat.py fromto: from fenics import@# Dump solution

FIGURE: [fig/beam1, width=800 frac=1] Gravity-induced deformation of a clamped beam: deflection (left) and stress intensity (right).
